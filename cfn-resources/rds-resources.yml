Resources:
  lambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: ${file(serverless.${self:provider.stage}.yml):vpc}
      GroupDescription: Allow outbound to postgres
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535
          IpProtocol: '-1'

  lambdaSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref lambdaSecurityGroup
      DestinationSecurityGroupId: !Ref postgresSecurityGroup
      IpProtocol: '-1'


  postgresSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: ${file(serverless.${self:provider.stage}.yml):vpc}
      GroupDescription: Allow inbound from lambda
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref lambdaSecurityGroup
          IpProtocol: '-1'

  postgresSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      SubnetIds: ${file(serverless.${self:provider.stage}.yml):subnets}
      DBSubnetGroupDescription: postgres subnets

  postgresSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: password
        PasswordLength: 16
        ExcludeCharacters: "\"'@/\\" 

  postgresSecretAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref postgresSecret
      TargetId: !Ref postgres
      TargetType: AWS::RDS::DBInstance

  postgres:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      DBSubnetGroupName: !Ref postgresSubnetGroup
      Engine: postgres
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref postgresSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref postgresSecret, ':SecretString:password}}' ]]
      MultiAZ: false
      Port: '5432'
      PubliclyAccessible: true
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref postgresSecurityGroup